PROJECT: DevOps Portfolio Project – Status Summary

ENV/INFRA
- Jenkins: running at http://localhost:8080 (job: devops-portfolio)
- JCasC wiring prepared: jenkins/docker-compose.yml exports CASC_JENKINS_CONFIG and env; jenkins/jenkins-casc.yaml defines credentials + job
- Kind K8s cluster: namespace oriyan-portfolio, app deployed and healthy (2/2)
- Ngrok: active for Jenkins; webhook points to: https://740e4b92b245.ngrok-free.app/github-webhook/

APPLICATION
- Flask app updated to gunicorn (debug disabled)
- Added /metrics via prometheus_client
- DB: K8s MONGO_URI uses mongodb-service with credentials from Secret (portfolio-secrets)

CI/CD
- Jenkinsfile aligned: builds tag v${BUILD_NUMBER} + latest; deploy via kubectl set image; deploy/push enabled on main + feature/day2-docker-kubernetes
- Webhook updater script (update-github-webhook-safe.sh) creates/updates the GitHub webhook automatically
- Current Jenkins lastBuild: FAILURE (#1). New build pending after credentials automation

MONITORING
- Prometheus config (monitoring/prometheus.yml) scrapes:
  - local: localhost:5001/metrics (via port-forward)
  - in-cluster: portfolio-service.oriyan-portfolio.svc.cluster.local:80/metrics (when Prometheus is in-cluster)
- Alert rules added (monitoring/rules/alerts.yml)
- Grafana provisioning added (datasource + dashboard: Portfolio App Overview)
 - kube-prometheus-stack installed in namespace "monitoring" (Helm release: kps)
 - ServiceMonitor and PrometheusRule applied for portfolio service

OPS SCRIPTS
- start-all.sh loads .env, prepares KUBECONFIG_BASE64, starts Jenkins, (re)deploys to K8s if needed, port-forward 5001, starts ngrok; removed Jenkins password print
- update-github-webhook-safe.sh pulls ngrok URL and updates/creates GitHub webhook
- Workspace pager channel created under .workspace/agents/pager (diagnostics + README)

CURRENT STATE (NOW)
- App /health: OK (http://localhost:5001/health)
- K8s Deployment: 2/2 available, image: mastereflex123/portfolio:v3.2
- Prometheus/Grafana (compose) up; local /metrics available (200); in-cluster metrics pending rollout of Prometheus in cluster
- Webhook: updated to current ngrok URL (above)
 - In-cluster monitoring: kps pods Running; ServiceMonitor discovered targets; validation in progress

PENDING/NEXT STEPS
1) Jenkins Credentials via JCasC (preferred) or manual:
   - github-token (Secret Text)
   - docker-hub (Username/Password)
   - kubeconfig (Secret file)
2) Trigger CI via webhook (commit/push) or Build Now in Jenkins
3) Wait for build (8–15m) and rollout (2–3m), then verify:
   - K8s pods running new image with /metrics exposed
   - Prometheus scrapes /metrics successfully; Grafana dashboard shows data
4) Optional hardening:
   - Unify MongoDB image versions (K8s and compose)
   - Move Prometheus/Grafana into K8s (Helm), add alerting routes
   - Store compose secrets in .env via env_file

ARTIFACTS/KEY FILES
- Jenkinsfile
- jenkins/docker-compose.yml, jenkins/jenkins-casc.yaml, jenkins/install-plugins.sh
- start-all.sh, start-ngrok.sh, update-github-webhook-safe.sh
- k8s/* (deployment, service, secrets, etc.)
- monitoring/* (prometheus.yml, rules, grafana provisioning)
- oriyan_portfolio.py (gunicorn + /metrics)
- IMPROVEMENTS.md (detailed improvement checklist)

